<?xml version='1.0' encoding='utf-8' standalone='no' ?>
<!--  

   Note that error id="1179" does not need to be translated, its for internal use only.
-->

<errors>
	<error id="1000" label="kError_AmbiguousReference">Nejednoznačný odkaz na  %s.
	<description><![CDATA[
	A reference might be to more than one item. For example, the following uses the namespaces <code>rss</code> and <code>xml</code>, each of which defines a 
	different value for the <code>hello()</code> function. The 		
	<code>trace(hello())</code> statement returns this error because it cannot determine which namespace to use.<br>
	
<pre><code>private namespace rss;
private namespace xml;
    
public function ErrorExamples() {
  	use namespace rss;
   	use namespace xml;
	trace(hello());
}
    
rss function hello():String {
      	return "hola";
    }
    
    xml function hello():String {
        return "foo";
    }</code></pre>
 

	<p>Correct an ambiguous reference by making the reference specific. The following example 	uses the form <i>namespace</i>::<i>function</i> to specify 
	which namespace to use:


<pre><code>public function ErrorExamples() {
    
    trace(rss::hello());
    trace(xml::hello());
}</code></pre>
        
	]]>
	</description>

</error>
	<error id="1003" label="kError_NamespaceAccessSpecifiers">Specifikátory přístupu nejsou povoleny u atributů prostoru názvů.
		<description>You can not use both an access specifier (such as private or public) and a namespace attribute on a definition.</description></error>
	<error id="1004" label="kError_Unknown_Namespace">Prostor názvů nebyl nalezen nebo se jedná o konstantu v době kompilace.
	
<description><![CDATA[
		The namespace is either unknown or is an expression that could have different values at run time.
		Check that you are spelling the namespace correctly and that its definition is imported correctly.]]></description>
</error>

	<error id="1006" label="kError_InvalidSuperExpression">Výraz super lze použít pouze v rámci metod instancí tříd.</error>
	<error id="1007" label="kError_InvalidSuperStatement">Příkaz super lze použít pouze v rámci konstruktorů instancí tříd.
<description><![CDATA[
		You cannot use the <code>super</code> statement within static members. You can 
		use the <code>super</code> statement only within class instances.
	]]>
	</description>
</error>
	<error id="1008" label="kError_InvalidAttribute">Atribut je neplatný.</error>
	<error id="1010" label="kError_InvalidOverride">Atribut override smí být použit pouze v definicích vlastností tříd.
<description><![CDATA[
		You cannot use the <code>override</code> keyword within a function block.
	]]></description>

</error>
	<error id="1011" label="kError_InvalidVirtual">Atribut virtual smí být použit pouze v definicích vlastností tříd.
<description><![CDATA[
		You cannot use the <code>virtual</code> attribute when you declare a property that does not belong to a class 
		(for example, when you declare a variable within a function block).
	]]></description>
</error>
	<error id="1012" label="kError_InvalidStatic">Atribut static smí být použit pouze v definicích v rámci třídy.</error>
	<error id="1013" label="kError_InvalidPrivate">Atribut private smí být použit pouze v definicích vlastností tříd.</error>
	<error id="1014" label="kError_Unsupported_Intrinsic">Atribut intrinsic již není podporován.
<description>
		ActionScript 3.0 does not support the <code>intrinsic</code> keyword.
	</description>

</error>
	<error id="1016" label="kError_BaseClassIsFinal">Základní třída je konečná.
<description><![CDATA[
		The superclass cannot be extended because it is marked 
		as <code>final</code>.
	]]></description>

</error>
	<error id="1017" label="kError_UnknownBaseClass">Definice základní třídy %s nebyla nalezena.</error>
	<error id="1018" label="kError_DuplicateClassDefinition">Duplicitní definice třídy: %s.</error>
	<error id="1020" label="kError_OverrideNotFound">Metoda s označením přepis musí přepisovat jinou metodu.</error>
	<error id="1021" label="kError_DuplicateFunction">Duplicitní definice funkce.
<description>
		You cannot declare more than one function with the same identifier name within the same scope.
	</description>

</error>
	<error id="1022" label="kError_OverrideFinalAccessor">Nelze přepsat konečný mechanismus přístupu.</error>
	<error id="1023" label="kError_IncompatibleOverride">Nekompatibilní přepis.
<description> A function marked override must exactly match the parameter and return type declaration of the function it is overriding. 
It must have the same number of parameters, each of the same type, and declare the same return type.  If any of the parameters are optional, that
must match as well.  Both functions must use the same access specifier (public, private, and so on) or namespace attribute as well.</description></error>
	<error id="1024" label="kError_OverrideOfFuncNotMarkedForOverride">Probíhá pokus o přepis funkce neoznačené pro přepis.
<description>
		<![CDATA[
		If a method in a class overrides a method in a base class, you must explicitly declare it by using the <code>override</code> attribute, as this example shows:

		<pre>public override function foo():void{};</pre>
	]]>
	</description>

</error>
	<error id="1025" label="kError_FinalMethodRedefinition">Nelze předefinovat konečnou metodu.
<description><![CDATA[
		The method cannot be extended because it is marked
		as <code>final</code> in the base class.
	]]></description>

</error>
	<error id="1026" label="kError_ConstructorsMustBeInstanceMethods">Funkcemi konstruktorů musejí být metody instancí.</error>
	<error id="1027" label="kError_FuncIsStaticAndOverride">Funkce nemohou být statické a zároveň určené pro přepis.</error>
	<error id="1028" label="kError_FuncIsStaticAndVirtual">Funkce nemohou být statické a zároveň virtuální.</error>
	<error id="1029" label="kError_FuncIsVirtualAndFinal">Funkce nemohou být konečné a zároveň virtuální.</error>
	<error id="1030" label="kError_RestParameterNotNamed">Je třeba zadat název pole proměnných argumentů.
<description>
	<![CDATA[
		The ...(rest) parameter definition specifies that all values supplied after ...(rest) 
		are collected into any array.  
		You must specify a name for the array, as in the expression 
		<code>function foo(x,...(rest))</code>.

	]]>
	</description>

</error>
	<error id="1033" label="kError_VirtualVars">Virtuální proměnné nejsou podporovány.</error>
	<error id="1034" label="kError_NativeVars">Proměnné nemohou být nativní.</error>
	<error id="1035" label="kError_VarIsFinalAndVirtual">Proměnné nemohou být konečné a zároveň virtuální.</error>
	<error id="1037" label="kError_NestedPackage">Balíčky nemohou být vnořené.</error>
	<error id="1038" label="kError_BreakHasNoTarget">Cíl příkazu break nebyl nalezen.</error>
	<error id="1039" label="kError_ContinueHasNoTarget">Cíl příkazu continue nebyl nalezen.</error>
	<error id="1040" label="kError_DuplicateLabel">Duplicitní definice popisu.</error>
	<error id="1041" label="kError_AttributesAreNotCallable">Atributy nejsou volatelné.</error>
	<error id="1042" label="kError_ThisUsedInStaticFunction">Klíčové slovo this nelze použít ve statických metodách. Lze je použít pouze v metodách instancí, uzavřeních funkcí a globálním kódu.
<description>
	<![CDATA[
		You cannot use the <code>this</code> keyword within a static member, because 
		<code>this</code> would have no context.
	]]>
	</description>


</error>
	<error id="1043" label="kError_UndefinedNamespace">Nedefinovaný prostor názvů.</error>
	<error id="1044" label="kError_UnknownInterfaceMethod">Metoda rozhraní %s v prostoru názvů %s není implementována třídou %s.</error>
	<error id="1045" label="kError_UnknownInterface">Rozhraní %s nebylo nalezeno.</error>
	<error id="1046" label="kError_UnknownType">Typ nebyl nalezen nebo se nejednalo o konstantu v době kompilace: %s.
<description>
		<![CDATA[
		The class used as a type declaration is either unknown or is an expression that could have different values at run time.
		Check that you are importing the correct class and that its package location
		has not changed. Also, check that the package that contains the code (not the
		imported class) is defined correctly (for example, make sure to use proper
		ActionScript 3.0 package syntax, and not ActionScript 2.0 syntax).</p>

		<p>The error can also occur if the class being referenced is not defined in a namespace that is in use or is not defined as public:</p>

		<pre><code>public class Foo{}</code></pre>

        <span class="flexonly"><p>If you are using Flex&#153 Builder&#153 2 and the class is in a library,
		make sure to set the class path for the project.</p></span>


	]]>
	</description>


</error>
	<error id="1047" label="kError_NonConstantParamInitializer">Inicializátor parametru je neznámý nebo se nejedná o konstantu v době kompilace.
	
	<description><![CDATA[
	The value used as the default value for the parameter is either undefined or could have different values at run time. Check that the initializer is spelled 
	correctly, and that the initializer value isn't an expression that could result in different possible values at run time.
	]]></description>
</error>
	
	<error id="1048" label="kError_MethodIsNotAConstructor">Metodu nelze použít jako konstruktor.
	
	<description><![CDATA[
	It is not possible to create an instance of a method of a class.  Only global functions can be used in <code>new</code> expressions.
	
<pre>class D { function xx() { return 22; } }
var d:D = new D();
var x = new d.xx(); // error, method cannot be used as constructor
function yy() { this.a = 22; }
var z = new yy(); // no error, global functions can be used as constructors.</pre>

	]]></description>	
</error>
	<error id="1049" label="kError_AssignmentToConstVar">Neplatné přiřazení k proměnné zadáno jako konstanta.</error>
	<error id="1050" label="kError_AssignmentToNonRefVar">Nelze přiřadit k nereferenční hodnotě.</error>
	<error id="1051" label="kError_ReturnTypeMustBeUndefined">Vrácená hodnota musí být nedefinovaná.
<description><![CDATA[
		You are attempting to use the <code>return</code> statement within a method that
		has a declared return type <code>void</code>.
	]]></description>


</error>
	<error id="1052" label="kError_ConstInitializerNotConst">Inicializátor konstanty je neznámý nebo se nejedná o konstantu v době kompilace.

	<description><![CDATA[
	The value used to initialize the constant is either undefined or could have different values at run time. Check that the initializer is spelled 
	correctly, and that the initializer value isn't an expression that could result in different possible values at run time.
	]]></description>

</error>
	<error id="1053" label="kError_AccessorTypesMustMatch">Typy mechanismů přístupu se musejí shodovat.</error>
	<error id="1054" label="kError_BadSetterReturnType">Vrácený typ v definici metody pro nastavení (setter) musí být nezadaný nebo prázdný.
<description><![CDATA[
		You cannot specify a return value for a setter function. For example, the following is invalid:

		<pre>public function set gamma(g:Number):Number;</pre>

		<p>The following <em>is</em> valid:</p>

		<pre>public function set gamma(g:Number):void;</pre>
	]]></description>

</error>
	<error id="1058" label="kError_PropertyIsWriteOnly">Vlastnost je pouze pro zápis.</error>
	<error id="1059" label="kError_PropertyIsReadOnly">Vlastnost je pouze pro čtení.

	<description><![CDATA[
	This property is defined through a getter function, which allows you to retrieve that property's value. There is no setter function defined 
	for this property, however, so it is read-only.
	<p>In the following example, line 3 generates an error because there is no setter function defined for <code>xx</code>:
	
<pre>class D { function get xx() { return 22; } }
var d:D = new D();
d.xx = 44; // error, property is read-only</pre>
	]]></description>

</error>
	<error id="1061" label="kError_Strict_UndefinedMethod">Volání metody %s, která je možná nedefinovaná, přes odkaz se statickým typem %s.

	<description><![CDATA[
	You are calling a method that is not defined.
	]]></description>

</error> <!-- edited -->
	<error id="1063" label="kError_UnableToOpenFile">Nelze otevřít soubor: %s.</error>
	<error id="1064" label="kError_InvalidMetaData">Neplatná metadata.
	<description><![CDATA[
	This metadata is unrecognized.
	]]></description>


</error>
	<error id="1065" label="kError_MetaDataAttributesHasMoreThanOneElement">Atributy metadat nemohou obsahovat více než jeden prvek.</error>
	<error id="1067" label="kError_ImplicitCoercisionOfUnrelatedType">Implicitní vynucené nastavení hodnoty typu %s na nepřidružený typ %s.
<description><![CDATA[
		You are attempting to cast an object to a type to which it cannot be converted. This can happen
		if the class you are casting to is not in the inheritance chain of the object being cast.
		This error appears only when the compiler is running in strict mode.
	]]></description>


</error>
	<error id="1068" label="kError_Parser_UnableToOpenFile">Nelze otevřít zahrnutý soubor: %s.</error>
	<error id="1069" label="kError_Parser_DefinitionOrDirectiveExpected">Chyba syntaxe: očekávána definice nebo instrukce.

<description>
		Check the syntax in the line.
	</description>

</error>
	<error id="1071" label="kError_Parser_ExpectingAnnotatableDirectiveAfterAttributes">Chyba syntaxe: klíčové slovo definice (například function) očekáváno za atributem %s, nikoli %s.
<description>
	<![CDATA[
		This error will occur if the author forgets to use the "var" or "function" keyword in a declaration.
<pre><code>public int z;// should be 'public var z:int;'</code></pre>

		This error might also occur when the compiler encounters an unexpected character. For example,
		the following use of the <code>trace()</code> function is invalid, because of the missing
		parentheses (the correct syntax is <code>trace("hello")</code>):

<pre>
trace "hello"
</pre>
	]]>
	</description>

</error>
	<error id="1072" label="kError_Parser_ExpectedXMLBeforeNameSpace">Chyba syntaxe: očekáváno xml před prostorem názvů.
<description>
	<![CDATA[
		The correct statement syntax is <code>default xml namespace = </code> <em>ns</em>. Either the keyword <code>xml</code> (note the lowercase) 
		is missing or an incorrect keyword was used. For more
		information, see the <a href="statements.html#default_xml_namespace">default xml namespace</a>
		directive.
	]]>
	</description>

</error>
	<error id="1073" label="kError_Parser_ExpectingCatchOrFinally">Chyba syntaxe: očekávána klauzule catch nebo finally.</error>
	<error id="1075" label="kError_Parser_EachWithoutIn">Chyba syntaxe: klíčové slovo each není povoleno bez operátoru in.</error>
	<error id="1076" label="kError_Parser_ExpectedLeftParen">Chyba syntaxe: očekávána levá závorka před identifikátorem.</error>
	<error id="1077" label="kError_Parser_ExpectedCaseLabel">Očekáván prvek CaseLabel.

	<description><![CDATA[
	The compiler expected a <code>case</code> statement at this point in the switch block. The 	following switch block incorrectly includes a call to <code>print</code> before the first </code><code>case</code> statement:

<pre>switch(x)
{
trace(2);
case 0:  trace(0); 
break
}</pre>
	]]>
    </description>
</error>
	<error id="1078" label="kError_Parser_LabelIsNotIdentifier">Popisem musí být jednoduchý identifikátor.</error>
	<error id="1079" label="kError_Parser_WrongNumberOfSuperArgs">Výraz super musí mít jeden operand.</error>
	<error id="1080" label="kError_Parser_ExpectingIncrOrDecrOperator">Očekáván inkrementační nebo dekrementační operátor.</error>
	<error id="1082" label="kError_Parser_ExpectingASingleExpressionWithinParenthesis">Očekáván jednoduchý výraz v závorkách.</error>
	<error id="1083" label="kError_Parser_ExpectedPrimaryExprBefore">Chyba syntaxe: %s je neočekávané.

<description>
	<![CDATA[
		The line of code is missing some information. In the following example,
		some expression (such as another number) needs to be included after the final plus sign:

		<pre>var sum:int = 1 + 2 + ;</pre>
	]]>
	</description>

</error>
	<error id="1084" label="kError_Parser_ExpectedToken">Chyba syntaxe: očekává se %s před %s.
<description>
	<![CDATA[
		The expression was unexpected at this point.
		If the error says "Expecting right brace before end of program," a block of code
		is missing a closing brace (&#125).

		<p>If the error says "Expecting left parenthesis before _," you may have omitted a  
		parenthesis from a conditional expression, as shown in the following example, which is intentionally incorrect: </p>

		<pre><code>var fact:int = 1 * 2 * 3;
if fact &gt; 2 {
	var bigger:Boolean = true;
}</code></pre>
	]]>
	</description>


</error>
	<error id="1086" label="kError_Parser_ExpectedSemicolon">Chyba syntaxe: očekáván středník před %s.</error>
	<error id="1087" label="kError_Parser_ExtraCharsAfterEndOfProgram">Chyba syntaxe: byly nalezeny znaky navíc za koncem programu.</error>
	<error id="1093" label="kError_Lexical_General">Chyba syntaxe.</error>
	<error id="1094" label="kError_Lexical_LineTerminatorInSingleQuotedStringLiteral">Chyba syntaxe: Řetězcová konstanta musí být ukončena před zalomením řádku.</error>
	<error id="1095" label="kError_Lexical_LineTerminatorInDoubleQuotedStringLiteral">Chyba syntaxe: Řetězcová konstanta musí být ukončena před zalomením řádku.</error>
	<error id="1097" label="kError_Lexical_EndOfStreamInStringLiteral">Chyba syntaxe: vstup dokončen před dosažením koncových uvozovek pro řetězcovou konstantu.</error>
	<error id="1099" label="kError_Lexical_SyntaxError">Chyba syntaxe.</error>
	<error id="1100" label="kError_Lexical_NoMatchingTag">Chyba syntaxe: XML nemá shodné zahajovací a ukončovací tagy.</error>
	<error id="1102" label="kError_CannotDeleteSuperDecendants">Nelze odstranit potomky ve výrazu super.</error>
	<error id="1103" label="kError_DuplicateNamespaceDefinition">Duplicitní definice prostoru názvů.

	<description><![CDATA[
	You defined the namespace more than once. Delete or modify the duplicate definition.
	]]></description>


</error>
	<error id="1104" hidden="true" label="kError_ErrorNodeError"> %s </error>
	<error id="1105" label="kError_AssignmentTargetNotRefVal">Cílem přiřazení musí být referenční hodnota.

	<description><![CDATA[
	You can assign a value to a variable, but you cannot assign a value to another value. 
	]]></description> 
</error>
	<error id="1106" label="kError_IncrementOperatorNotAReference">Operandem přírůstku musí být odkaz.
	<description><![CDATA[
	The operand must be a variable, an element in an array, or a property of an object.
	]]></description>
</error>
	<error id="1107" label="kError_InvalidIncrementOperand">Operand přírůstku je neplatný.

	<description><![CDATA[
	The operand must be a variable, an element in an array, or a property of an object.
	]]></description>
</error>
	<error id="1108" label="kError_InvalidDecrementOperand">Operand snížení je neplatný.
	<description><![CDATA[
	The operand must be a variable, an element in an array, or a property of an object.
	]]></description>
</error>
	<error id="1109" label="kError_ExpectingExpression">Očekáván výraz.

<description>
	<![CDATA[
		An expression is missing in a part of the code. For example, the following produces this
		error (there is a condition missing from the <code>if</code> statement:

<pre><code>var x = (5 &gt; 2) ? 
trace(x)</code></pre>
	]]>
	</description>


</error>
	<error id="1110" label="kError_MissingXMLTagName">Chybí název tagu XML.</error>
	<error id="1111" hidden="true" label="kError_InvalidAbcFile">Soubor %s nepředstavuje platný soubor ABC.</error>
    <error id="1112" label="kError_Parser_FileIncludesItself">Možná nekonečná rekurze způsobená zahrnutím tohoto souboru: %s.

	<description><![CDATA[
	A file that is included in the source being compiled contains other <code>include</code> 	statements that would cause an infinite loop. For example, the following files. a.as and 	b.as, generate this error because each file tries to include the other.
	<p>
	File a.as contains the following, which attempts to include the file b.as:
<pre>import foo.bar.baz;
include "b.as"
trace(2);</pre>
	<p>File b.as contains the following, which attempts to include the file a.as:
	<pre>include "a.as"</pre>

	]]></description>

</error>
	<error id="1113" label="kError_CircularReference">Byl zjištěn odkaz cyklického typu v %s.
	<description><![CDATA[
	A class is trying to extend a superclass. For example, class A cannot extend class B if B inherits from A:
<pre><code>class a extends b { }
class b extends a { }</code></pre>
	]]></description>

</error>
	<error id="1114" label="kError_InvalidPublic">Atribut public lze použít pouze uvnitř balíčku.</error>
	<error id="1115" label="kError_InvalidInternal">Atribut internal lze použít pouze uvnitř balíčku.</error>
	<error id="1116" label="kError_InvalidNamespace">Uživatelský atribut prostoru názvů lze použít pouze na nejvyšší úrovni definice třídy.</error>
	<error id="1118" label="kError_ImplicitCoercionToSubtype">Implicitní vynucené nastavení hodnoty se statickým typem %s na možná nepřidružený typ %s.
	<description><![CDATA[You are using a value that is not of the expected type and no implicit coercion exists to convert it to the expected type.
	<p>Perhaps you are using a supertype where a subtype is expected. For example:
<pre><code>class A {}
var a:A = new A(); 
class B extends A { function f() }
var b : B = a // error</code></pre>
	<p>The last statement generates an error because it attempts to assign an object of type A to a variable of type B.
	<p>Similarly, the following defines the <code>foo()</code> function, which takes a parameter of type B. The statement <code> foo(a);</code> 
	generates an error because it attempts to use a parameter of type A:
<pre><code>function foo(x:B) { }
foo(a);</code></pre>
	<p>Also, the following statement generates an error because the returned value for 	<code>foo2()</code> must be type B:
	<pre><code>function foo2():B { return new A(); }</code></pre>
	]]></description>

</error>
	<error id="1119" label="kError_UndefinedProperty">Přístup k vlastnosti %s, která je možná nedefinovaná, přes odkaz se statickým typem %s.


<description>
	<![CDATA[
		You are attempting to access a property that does not exist for the specified object. For example,
		the following code generates this error because an int object does not have a property named
		<code>assortment</code>:

<pre><code>var i:int = 44;
var str:String = i.assortment;</code></pre>

		This error appears only when the compiler is running in strict mode.
	]]>
	</description>


</error>
	<error id="1120" label="kError_UnfoundProperty">Přístup k nedefinované vlastnosti %s.

<description>
	<![CDATA[
		You are attempting to access an undefined variable. For example, if the variable
		<code>huh</code> has not been defined, a call to it generates this error:

<pre><code>huh = 55;</code></pre>

		This error can appear only when the compiler is running in strict mode.
	]]>
	</description>


</error>
    <error id="1121" label="kError_GetterCannotHaveParameters">Definice metody pro získání (getter) nesmí obsahovat žádné parametry.</error>
    <error id="1122" label="kError_SetterMustHaveOneParameter">Definice metody pro nastavení (setter) musí obsahovat přesně jeden parametr.</error>
    <error id="1123" label="kError_SetterCannotHaveOptional">Definice metody pro nastavení (setter) nemůže obsahovat volitelné parametry.</error>
    <error id="1124" label="kError_BadGetterReturnType">Vrácený typ definice metody pro získání (getter) nesmí být prázdný.

	<description><![CDATA[
	A getter function simulates a variable. Because variables cannot be of type void, you cannot declare getter functions to return type void.
	]]></description>
</error>
    <error id="1125" label="kError_InterfaceMethodWithBody">Metody definované v rozhraní nesmějí mít tělo.</error>
    <error id="1126" label="kError_FunctionWithoutBody">Funkce nemá tělo.</error>
    <error id="1127" label="kError_DuplicateAttribute">Atribut %s byl zadán vícekrát.

	<description><![CDATA[
	You specified an attribute more than once in the same statement. For example, the statement <code>public static public var x;</code> generates 
	this error because it specifies that the variable <code>x</code> is public twice. Delete duplicate declarations.
	]]></description>

</error>
    <error id="1129" label="kError_DuplicateInterfaceDefinition">Duplicitní definice rozhraní: %s.

	<description><![CDATA[
	Change or delete the duplicate definitions.
	]]></description>

</error>
    <error id="1130" label="kError_CtorWithReturnType">U konstruktoru nemůže být určen vrácený typ.</error>
    <error id="1131" label="kError_InvalidClassNesting">Třídy nesmějí být vnořené.</error>
    <error id="1132" label="kError_InvalidFinalUsage">Atribut final lze použít pouze v metodě definované ve třídě.</error>
    <error id="1133" label="kError_InvalidNative">Atribut native lze použít pouze s definicemi funkcí.</error>
    <error id="1134" label="kError_InvalidDynamic">Atribut dynamic lze použít pouze s definicemi tříd.</error>
    <error id="1135" label="kError_Parser_keywordInsteadOfTypeExpr">Chyba syntaxe: %s nepředstavuje platný typ.</error>
    <error id="1136" label="kError_WrongNumberOfArguments">Nesprávný počet argumentů. Očekáváno: %s.

	<description><![CDATA[
	The function expects a different number of arguments than those you provided. For example, the 	following defines function <code>goo</code>, which has two arguments:
<pre>class A { static function goo(x:int,y:int) 
{ return(x+y); } }</pre>
	<p>The following statement would generate an error because it provides three arguments:
<pre>A.goo(1,2,3);</pre>
	]]></description>
</error>
    <error id="1137" label="kError_TooManyArguments">Nesprávný počet argumentů. Očekáváno více než: %s.</error>
    <error id="1138" label="kError_BadRequiredParameter">Vyžadované parametry nejsou povoleny po volitelných parametrech.</error>
    <error id="1139" label="kError_VarInInterface">Deklarace proměnných nejsou povoleny v rozhraních.</error>
    <error id="1140" label="kError_InvalidRestDecl">Parametry zadané za klíčovým slovem definice parametru ...rest mohou být pouze datového typu Pole.</error>
    <error id="1141" label="kError_CannotExtendInterface">Třída smí rozšiřovat pouze jinou třídu, nikoli rozhraní.</error>
    <error id="1142" label="kError_CannotExtendClass">Rozhraní smí rozšiřovat pouze jiná rozhraní, avšak %s představuje třídu.
	<description><![CDATA[
	You are attempting to have the interface extend a class. An interface can only extend another 	interface.
	]]></description>

</error>
    <error id="1143" label="kError_InvalidOverrideUsage">Atribut override lze použít pouze v metodě definované ve třídě.</error>
    <error id="1144" label="kError_IncompatibleInterfaceMethod">Metoda rozhraní %s v prostoru názvů %s je implementována s nekompatibilním podpisem ve třídě %s.

	<description><![CDATA[
	Method signatures must match exactly.
	]]></description>

</error>
    <error id="1145" label="kError_NativeMethodWithBody">Nativní metody nemohou mít tělo.
	<description><![CDATA[
	You cannot use <code>native</code> because it is a reserved keyword.
	]]></description>

</error>
    <error id="1146" label="kError_ConstructorCannnotBeGetterSetter">Konstruktor nemůže představovat metodu pro získání (getter) nebo pro nastavení (setter).</error>
    <error id="1147" label="kError_MissingFilespec">Zdrojový soubor AS nebyl určen.</error>
    <error id="1149" label="kError_CannotReturnFromStaticInit">Příkaz return nelze použít ve statickém inicializačním kódu.</error>
	<error id="1150" label="kError_InvalidProtected">Atribut protected lze použít pouze v definicích vlastností tříd.</error>
	<error id="1151" label="kError_ConflictingNameInNamespace">Existuje konflikt s definicí %s v prostoru názvů %s.

	<description><![CDATA[
	You cannot declare more than one variable with the same identifier name within the same scope unless all such variables are declared to be of 
	the same type. In ActionScript 3.0, different code 	blocks (such as those used in two <code>for</code> loops in the same function definition) are 	considered to be in the same scope. 
	<p>The following code example correctly casts the variable <code>x</code> as the same type:
<pre><code>function test()
{
	var x:int = 3;
	for(var x:int = 33; x &lt; 55; x++)
	trace(x);
	for(var x:int = 11; x &lt; 33; x++)
	trace(x)
}</code></pre>
	<p>The following code example generates an error because the type casting in the variable declaration and the <code>for</code> loops are different:
<pre><code>function test()
{
	var x:String = "The answer is";
	for(var x:int = 33; x &lt; 55; x++) // error
	trace(x);
	for(var x:unit = 11; x &lt; 33; x++) // error
	trace(x)
}</code></pre>
]]></description>


</error>
	<error id="1152" label="kError_ConflictingInheritedNameInNamespace"> Existuje konflikt s převzatou definicí %s v prostoru názvů %s.</error>
    <error id="1153" label="kError_ConstructorMustBePublic">Konstruktor lze deklarovat pouze jako veřejný.</error>
	<error id="1154" label="kError_ConflictingAccessSpecifiers">V definici lze zadat jen jednu z následujících možností: public, private, protected nebo internal.</error>
	<error id="1155" label="kError_InvalidNestedAccessor">Mechanismy přístupu nemohou být vnořeny do jiných funkcí.</error>
	<error id="1156" label="kError_CannotInstantiateInterface">Rozhraní nelze konkretizovat s novým operátorem.</error>
	<error id="1157" label="kError_BadAccessInterfaceMember">Členy rozhraní nelze deklarovat jako public, private, protected nebo internal.</error>
	<error id="1158" label="kError_Parser_ExpectedLeftBrace">Chyba syntaxe: chybějící levá složená závorka ({) před tělem funkce.</error>
    <error id="1159" label="kError_CannotReturnFromPackageInit">Příkaz return nelze použít v inicializačním kódu balíčku.</error>
    <error id="1160" label="kError_InvalidInterfaceNative">Atribut native nelze použít v definicích rozhraní.
	<description><![CDATA[
	You cannot use <code>native</code> because it is a reserved keyword.
	]]></description>

</error>
    <error id="1162" label="kError_MultipleNamespaceAttributes">Pro každou definici lze použít jen jeden atribut prostoru názvů.</error>
    <error id="1163" label="kError_ConflictingInheritedNameInInterface">Metoda %s je v konfliktu s definicí převzatou z rozhraní %s.</error>
    <error id="1165" label="kError_InvalidInterfaceAttribute">Atribut rozhraní %s je neplatný</error>
    <error id="1166" label="kError_NamespaceInInterface">Deklarace prostoru názvů nejsou povoleny v rozhraních.</error>
    <error id="1167" label="kError_DuplicateImplements">Třída %s implementuje rozhraní %s vícekrát.

	<description><![CDATA[
	The class implements the same interface more than once. For example, the following generates this error because 
	class C implements interface A twice:

<pre><code>interface A {  public function f();  };
class C implements A,A {
public function f() { trace("f"); }
}</code></pre>
	
	<p>The correct implementing statement should be <code> class C implements A {</code>.
	]]></description>

</error>
    <error id="1168" label="kError_AssignmentToDefinedFunction">Neplatné přiřazení k funkci %s.

	<description><![CDATA[
	You are attempting to redefine a function. For example, the following defines the function 	<code>topLevel()</code> 
	to print the word "top". The second statement generates an error because it assigns a different return value to the function:
<pre><code>function topLevel() { trace("top"); }
topLevel = function() { trace("replacement works in ~");} // error</code></pre>
	]]></description>


</error>
    <error id="1169" label="kError_InterfaceNamespaceAttribute">Atributy prostoru názvů nejsou povoleny v metodách rozhraní.</error>
    <error id="1170" label="kError_MustReturnValue">Funkce nevrací hodnotu.

	<description><![CDATA[
	Every possible control flow in a function must return a value whenever the return type is 	something other than void. The following function 
	<code>f(x)</code> does not generate an error because the <code>if..else</code> statement always returns a value:

<pre><code>function f(x):int
{
if (x)
    	return 2;
else
    	return 3;
} // no error</code></pre>

<p>However, the function <code>g(x)</code> below generates the error because the <code>switch</code> statement does not always 
return a value.
<pre><code>function g(x:int):int
{
switch(x)
{
      	case 1: return 1;
      	case 2: return 2:
}
// return 2;//uncomment to remove the error
}</code></pre>

	<p>This checking is enabled only when the function declares a return type other than void. 
	]]></description>
</error>
    <error id="1171" label="kError_InvalidNamespaceInitializer">Inicializátorem prostoru názvů musí být buď řetězcová konstanta, nebo jiný prostor názvů.</error>
    <error id="1172" label="kError_DefinitionNotFound">Definici %s nebylo možné najít.</error>
    <error id="1173" label="kError_InvalidLabel">Definice popisu je neplatná.</error>
    <error id="1176" label="kError_IncompatableValueComparison">Porovnání mezi hodnotou statického typu %s a možná nepřidruženým typem %s.
<description>This error is enabled in strict mode.</description></error>
    <error id="1177" label="kError_CannotReturnFromGlobalInit">Příkaz return nelze použít v globálním inicializačním kódu.</error>
    <error id="1178" label="kError_InaccessiblePropertyReference">Došlo k pokusu o přístup k nepřístupné vlastnosti %s přes odkaz se statickým typem %s.</error>
    <error id="1179" hidden="true" label="kError_ColonObjectAnnoOutOfService">:Objekt je dočasně mimo provoz. Použijte místo toho :*.</error>
	<error id="1180" label="kError_Strict_PlainUndefinedMethod">Volání možná nedefinované metody %s.
<description>This error appears only when the compiler is running in strict mode.</description></error>
	<error id="1181" label="kError_ForwardReferenceToBaseClass">Předat odkaz na základní třídu %s.</error>
	<error id="1182" label="kError_IllegalPackageReference">Balíček nelze použít jako hodnotu: %s.</error>
	<error id="1184" label="kError_IncompatibleDefaultValue">Nekompatibilní výchozí hodnota typu %s na místě, kde bylo očekáváno: %s.</error>
	<error id="1185" label="kError_MultipleSwitchDefaults">Přepínač má více než jednu výchozí hodnotu, je však povolena pouze jedna výchozí hodnota.</error>
    <error id="1188" label="kError_AssignmentToDefinedClass">Neplatné přiřazení ke třídě %s.</error>
    <error id="1189" label="kError_Strict_AttemptToDeleteFixedProperty">Pokus o odstranění pevné vlastnosti %s. Lze odstranit pouze dynamicky definované vlastnosti.
<description>Delete removes dynamically defined properties from an object.  Declared properties of a class can not be deleted.  This error appears only when the compiler is running in strict mode.</description></error>
	<error id="1190" label="kError_InvalidBaseTypeExpression">Základní třída nebyla nalezena nebo se nejedná o konstantu v době kompilace.</error>
    <error id="1191" label="kError_InvalidInterfaceTypeExpression">Rozhraní nebylo nalezeno nebo se nejedná o konstantu v době kompilace.</error>
    <error id="1192" label="kError_StaticModifiedNamespace">Atribut static není povolen u definic prostorů názvů.</error>
    <error id="1193" label="kError_InvalidInterfaceNesting">Definice rozhraní nesmějí být vnořené do třídy nebo jiných definic rozhraní.</error>
	<error id="1194" label="kError_PrototypeIsAnInvalidAttribute">Atribut prototype je neplatný.</error>
	<error id="1195" label="kError_InaccessibleMethodReference">Došlo k pokusu o přístup k nepřístupné metodě %s přes odkaz se statickým typem %s.
		<description><![CDATA[You are either calling a private method from another class, or calling a method defined in a namespace that is not in use.  If you are calling a method defined in an unused namespace, add a <code>use</code> statement for the required namespace.
	]]></description>
 	</error>
	<error id="1196" label="kError_Parser_ThrowWithoutExpression">Chyba syntaxe: očekáván výraz po příkazu throw.</error>
    <error id="1197" label="kError_Authoring_SymbolClassInheritance">Třída %s nemůže rozšířit %s, protože oba tyto objekty jsou přidruženy k symbolům knihovny nebo hlavní časové ose.</error>
    <error id="1198" label="kError_AttributesOnPackage">Atributy nejsou povoleny v definici balíčku.</error>
    <error id="1199" label="kError_InternalError">Interní chyba: %s.</error>
    <error id="1200" label="kError_ParserInvalidForInInitializer">Chyba syntaxe: neplatný inicializátor for-in, očekáván pouze 1 výraz.</error>
	<error id="1201" label="kError_IllegalSuperStatement">Příkaz super se nemůže vyskytovat po příkazu this, super, return nebo throw.</error>
	<error id="1202" label="kError_UnfoundPackageProperty">Přístup k nedefinované vlastnosti %s v balíčku %s.

<description>
	<![CDATA[
		You are attempting to access an undefined variable in a package. For example, if the variable
		<code>p.huh</code> has not been defined, a call to it generates this error:

<pre><code>p.huh = 55;</code></pre>

		This error can only appear when the compiler is running in strict mode.
	]]>
</description>
    </error>
    <error id="1203" label="kError_NoDefaultBaseclassCtor">V základní třídě %s nebyl nalezen žádný výchozí konstruktor.
    <description>You must explicitly call the constructor of the base class with a super() statement if it has 1 or more required arguments.</description></error>
	<error id="1204" label="kError_BlockCommentNotTerminated">Nalezeny znaky /* bez odpovídajících znaků */ .
<description>
	<![CDATA[
		The characters '/*' where found, which indicate the beginning of a comment, but the corresponding characters, '*/', which indicate the end of the comment block, were not found.
    ]]></description>
	</error>
</errors>
