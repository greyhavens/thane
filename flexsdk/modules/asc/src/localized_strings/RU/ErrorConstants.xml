<?xml version='1.0' encoding='utf-8' standalone='no' ?>
<!--  

   Note that error id="1179" does not need to be translated, its for internal use only.
-->

<errors>
	<error id="1000" label="kError_AmbiguousReference">Неоднозначная ссылка на %s.
	<description><![CDATA[
	A reference might be to more than one item. For example, the following uses the namespaces <code>rss</code> and <code>xml</code>, each of which defines a 
	different value for the <code>hello()</code> function. The 		
	<code>trace(hello())</code> statement returns this error because it cannot determine which namespace to use.<br>
	
<pre><code>private namespace rss;
private namespace xml;
    
public function ErrorExamples() {
  	use namespace rss;
   	use namespace xml;
	trace(hello());
}
    
rss function hello():String {
      	return "hola";
    }
    
    xml function hello():String {
        return "foo";
    }</code></pre>
 

	<p>Correct an ambiguous reference by making the reference specific. The following example 	uses the form <i>namespace</i>::<i>function</i> to specify 
	which namespace to use:


<pre><code>public function ErrorExamples() {
    
    trace(rss::hello());
    trace(xml::hello());
}</code></pre>
        
	]]>
	</description>

</error>
	<error id="1003" label="kError_NamespaceAccessSpecifiers">Спецификаторы уровня доступа с атрибутами пространства имен недопустимы.
		<description>You can not use both an access specifier (such as private or public) and a namespace attribute on a definition.</description></error>
	<error id="1004" label="kError_Unknown_Namespace">Пространство имен не найдено или не является константой времени компиляции.
	
<description><![CDATA[
		The namespace is either unknown or is an expression that could have different values at run time.
		Check that you are spelling the namespace correctly and that its definition is imported correctly.]]></description>
</error>

	<error id="1006" label="kError_InvalidSuperExpression">Супервыражение можно использовать только внутри методов класса экземпляра.</error>
	<error id="1007" label="kError_InvalidSuperStatement">Супероператор можно использовать только внутри конструктора класса экземпляра. 
<description><![CDATA[
		You cannot use the <code>super</code> statement within static members. You can 
		use the <code>super</code> statement only within class instances.
	]]>
	</description>
</error>
	<error id="1008" label="kError_InvalidAttribute">Недопустимый атрибут.</error>
	<error id="1010" label="kError_InvalidOverride">Атрибут "override" можно использовать только в определениях свойств класса.
<description><![CDATA[
		You cannot use the <code>override</code> keyword within a function block.
	]]></description>

</error>
	<error id="1011" label="kError_InvalidVirtual">Атрибут "virtual" можно использовать только в определениях свойств класса.
<description><![CDATA[
		You cannot use the <code>virtual</code> attribute when you declare a property that does not belong to a class 
		(for example, when you declare a variable within a function block).
	]]></description>
</error>
	<error id="1012" label="kError_InvalidStatic">Атрибут "static" можно использовать только в определениях внутри класса.</error>
	<error id="1013" label="kError_InvalidPrivate">Атрибут "private" можно использовать для определений свойств класса.</error>
	<error id="1014" label="kError_Unsupported_Intrinsic">Атрибут "intrinsic" больше не поддерживается.
<description>
		ActionScript 3.0 does not support the <code>intrinsic</code> keyword.
	</description>

</error>
	<error id="1016" label="kError_BaseClassIsFinal">Базовый класс является окончательным.
<description><![CDATA[
		The superclass cannot be extended because it is marked 
		as <code>final</code>.
	]]></description>

</error>
	<error id="1017" label="kError_UnknownBaseClass">Определение базового класса %s не найдено.</error>
	<error id="1018" label="kError_DuplicateClassDefinition">Повторное определение класса: %s.</error>
	<error id="1020" label="kError_OverrideNotFound">Метод, который помечен на переопределение, должен переопределять другой метод.</error>
	<error id="1021" label="kError_DuplicateFunction">Повторное определение функции.
<description>
		You cannot declare more than one function with the same identifier name within the same scope.
	</description>

</error>
	<error id="1022" label="kError_OverrideFinalAccessor">Не удается переопределить окончательный метод доступа.</error>
	<error id="1023" label="kError_IncompatibleOverride">Несовместимое переопределение.
<description> A function marked override must exactly match the parameter and return type declaration of the function it is overriding. 
It must have the same number of parameters, each of the same type, and declare the same return type.  If any of the parameters are optional, that
must match as well.  Both functions must use the same access specifier (public, private, and so on) or namespace attribute as well.</description></error>
	<error id="1024" label="kError_OverrideOfFuncNotMarkedForOverride">Переопределение функции, которая не отмечена для переопределения.
<description>
		<![CDATA[
		If a method in a class overrides a method in a base class, you must explicitly declare it by using the <code>override</code> attribute, as this example shows:

		<pre>public override function foo():void{};</pre>
	]]>
	</description>

</error>
	<error id="1025" label="kError_FinalMethodRedefinition">Невозможно переопределить окончательный метод.
<description><![CDATA[
		The method cannot be extended because it is marked
		as <code>final</code> in the base class.
	]]></description>

</error>
	<error id="1026" label="kError_ConstructorsMustBeInstanceMethods">Функции конструктора должны быть методами экземпляра.</error>
	<error id="1027" label="kError_FuncIsStaticAndOverride">Функции не могут быть одновременно статическими и переопределяющими.</error>
	<error id="1028" label="kError_FuncIsStaticAndVirtual">Функции не могут быть одновременно статическими и виртуальными.</error>
	<error id="1029" label="kError_FuncIsVirtualAndFinal">Функции не могут быть одновременно окончательными и виртуальными.</error>
	<error id="1030" label="kError_RestParameterNotNamed">Необходимо указать имя массива с аргументами переменных.
<description>
	<![CDATA[
		The ...(rest) parameter definition specifies that all values supplied after ...(rest) 
		are collected into any array.  
		You must specify a name for the array, as in the expression 
		<code>function foo(x,...(rest))</code>.

	]]>
	</description>

</error>
	<error id="1033" label="kError_VirtualVars">Виртуальные переменные не поддерживаются.</error>
	<error id="1034" label="kError_NativeVars">Переменные не могут быть собственными.</error>
	<error id="1035" label="kError_VarIsFinalAndVirtual">Переменные не могут быть одновременно окончательными и виртуальными.</error>
	<error id="1037" label="kError_NestedPackage">Пакеты не могут быть вложенными.</error>
	<error id="1038" label="kError_BreakHasNoTarget">Цель оператора "break" не найдена.</error>
	<error id="1039" label="kError_ContinueHasNoTarget">Цель оператора "continue" не найдена.</error>
	<error id="1040" label="kError_DuplicateLabel">Двойное определение метки.</error>
	<error id="1041" label="kError_AttributesAreNotCallable">Атрибуты не могут быть вызваны.</error>
	<error id="1042" label="kError_ThisUsedInStaticFunction">Ключевое слово "this" не может использоваться в статических методах. Оно может использоваться только в методах экземпляра, в закрытии функций и в глобальных кодах.
<description>
	<![CDATA[
		You cannot use the <code>this</code> keyword within a static member, because 
		<code>this</code> would have no context.
	]]>
	</description>


</error>
	<error id="1043" label="kError_UndefinedNamespace">Неопределенное пространство имен.</error>
	<error id="1044" label="kError_UnknownInterfaceMethod">Интерфейсный метод %s в пространстве имен %s не внедрен классом %s.</error>
	<error id="1045" label="kError_UnknownInterface">Интерфейс %s не найден.</error>
	<error id="1046" label="kError_UnknownType">Тип не найден или не является константой времени компиляции: %s.
<description>
		<![CDATA[
		The class used as a type declaration is either unknown or is an expression that could have different values at run time.
		Check that you are importing the correct class and that its package location
		has not changed. Also, check that the package that contains the code (not the
		imported class) is defined correctly (for example, make sure to use proper
		ActionScript 3.0 package syntax, and not ActionScript 2.0 syntax).</p>

		<p>The error can also occur if the class being referenced is not defined in a namespace that is in use or is not defined as public:</p>

		<pre><code>public class Foo{}</code></pre>

        <span class="flexonly"><p>If you are using Flex&#153 Builder&#153 2 and the class is in a library,
		make sure to set the class path for the project.</p></span>


	]]>
	</description>


</error>
	<error id="1047" label="kError_NonConstantParamInitializer">Неизвестный инициализатор параметров, или не является константой времени компиляции.
	
	<description><![CDATA[
	The value used as the default value for the parameter is either undefined or could have different values at run time. Check that the initializer is spelled 
	correctly, and that the initializer value isn't an expression that could result in different possible values at run time.
	]]></description>
</error>
	
	<error id="1048" label="kError_MethodIsNotAConstructor">Метод не может использоваться как конструктор.
	
	<description><![CDATA[
	It is not possible to create an instance of a method of a class.  Only global functions can be used in <code>new</code> expressions.
	
<pre>class D { function xx() { return 22; } }
var d:D = new D();
var x = new d.xx(); // error, method cannot be used as constructor
function yy() { this.a = 22; }
var z = new yy(); // no error, global functions can be used as constructors.</pre>

	]]></description>	
</error>
	<error id="1049" label="kError_AssignmentToConstVar">Недопустимое присваивание переменной, которая определена как константа.</error>
	<error id="1050" label="kError_AssignmentToNonRefVar">Нельзя выполнить присваивание неизвестной переменной.</error>
	<error id="1051" label="kError_ReturnTypeMustBeUndefined">Возвращаемое значение должно быть неопределенным.
<description><![CDATA[
		You are attempting to use the <code>return</code> statement within a method that
		has a declared return type <code>void</code>.
	]]></description>


</error>
	<error id="1052" label="kError_ConstInitializerNotConst">Инициализатор констант неизвестен или не является константой времени компиляции.

	<description><![CDATA[
	The value used to initialize the constant is either undefined or could have different values at run time. Check that the initializer is spelled 
	correctly, and that the initializer value isn't an expression that could result in different possible values at run time.
	]]></description>

</error>
	<error id="1053" label="kError_AccessorTypesMustMatch">Типы средств доступа должны соответствовать.</error>
	<error id="1054" label="kError_BadSetterReturnType">Тип возвращаемого значения для определения установщика не должен указываться или должен быть пустым.
<description><![CDATA[
		You cannot specify a return value for a setter function. For example, the following is invalid:

		<pre>public function set gamma(g:Number):Number;</pre>

		<p>The following <em>is</em> valid:</p>

		<pre>public function set gamma(g:Number):void;</pre>
	]]></description>

</error>
	<error id="1058" label="kError_PropertyIsWriteOnly">Свойство "только на запись".</error>
	<error id="1059" label="kError_PropertyIsReadOnly">Свойство "только на чтение".

	<description><![CDATA[
	This property is defined through a getter function, which allows you to retrieve that property's value. There is no setter function defined 
	for this property, however, so it is read-only.
	<p>In the following example, line 3 generates an error because there is no setter function defined for <code>xx</code>:
	
<pre>class D { function get xx() { return 22; } }
var d:D = new D();
d.xx = 44; // error, property is read-only</pre>
	]]></description>

</error>
	<error id="1061" label="kError_Strict_UndefinedMethod">Обращение к возможно неопределенному методу %s через ссылку статического типа %s.

	<description><![CDATA[
	You are calling a method that is not defined.
	]]></description>

</error> <!-- edited -->
	<error id="1063" label="kError_UnableToOpenFile">Не удалось открыть файл: %s.</error>
	<error id="1064" label="kError_InvalidMetaData">Ошибочные метаданные.
	<description><![CDATA[
	This metadata is unrecognized.
	]]></description>


</error>
	<error id="1065" label="kError_MetaDataAttributesHasMoreThanOneElement">Атрибуты метаданных не могут содержать более одного элемента.</error>
	<error id="1067" label="kError_ImplicitCoercisionOfUnrelatedType">Неявное приведение значения типа %s к несоответствующему типу %s.
<description><![CDATA[
		You are attempting to cast an object to a type to which it cannot be converted. This can happen
		if the class you are casting to is not in the inheritance chain of the object being cast.
		This error appears only when the compiler is running in strict mode.
	]]></description>


</error>
	<error id="1068" label="kError_Parser_UnableToOpenFile">Не удалось открыть прилагаемый файл: %s.</error>
	<error id="1069" label="kError_Parser_DefinitionOrDirectiveExpected">Синтаксическая ошибка: ожидалось определение или директива.

<description>
		Check the syntax in the line.
	</description>

</error>
	<error id="1071" label="kError_Parser_ExpectingAnnotatableDirectiveAfterAttributes">Синтаксическая ошибка: ожидалось ключевое слово определения (как функция) после атрибута %s, а не %s.
<description>
	<![CDATA[
		This error will occur if the author forgets to use the "var" or "function" keyword in a declaration.
<pre><code>public int z;// should be 'public var z:int;'</code></pre>

		This error might also occur when the compiler encounters an unexpected character. For example,
		the following use of the <code>trace()</code> function is invalid, because of the missing
		parentheses (the correct syntax is <code>trace("hello")</code>):

<pre>
trace "hello"
</pre>
	]]>
	</description>

</error>
	<error id="1072" label="kError_Parser_ExpectedXMLBeforeNameSpace">Синтаксическая ошибка: ожидается XML перед пространством имен.
<description>
	<![CDATA[
		The correct statement syntax is <code>default xml namespace = </code> <em>ns</em>. Either the keyword <code>xml</code> (note the lowercase) 
		is missing or an incorrect keyword was used. For more
		information, see the <a href="statements.html#default_xml_namespace">default xml namespace</a>
		directive.
	]]>
	</description>

</error>
	<error id="1073" label="kError_Parser_ExpectingCatchOrFinally">Синтаксическая ошибка: ожидается блок "catch" или закрывающий оператор.</error>
	<error id="1075" label="kError_Parser_EachWithoutIn">Синтаксическая ошибка: нельзя использовать ключевое слово "each" без оператора "in".</error>
	<error id="1076" label="kError_Parser_ExpectedLeftParen">Синтаксическая ошибка: ожидается левая скобка перед идентификатором.</error>
	<error id="1077" label="kError_Parser_ExpectedCaseLabel">Ожидается CaseLabel.

	<description><![CDATA[
	The compiler expected a <code>case</code> statement at this point in the switch block. The 	following switch block incorrectly includes a call to <code>print</code> before the first </code><code>case</code> statement:

<pre>switch(x)
{
trace(2);
case 0:  trace(0); 
break
}</pre>
	]]>
    </description>
</error>
	<error id="1078" label="kError_Parser_LabelIsNotIdentifier">Метка должна быть простым идентификатором.</error>
	<error id="1079" label="kError_Parser_WrongNumberOfSuperArgs">Супервыражение должно иметь один операнд.</error>
	<error id="1080" label="kError_Parser_ExpectingIncrOrDecrOperator">Ожидается оператор увеличения или уменьшения.</error>
	<error id="1082" label="kError_Parser_ExpectingASingleExpressionWithinParenthesis">Ожидается одиночное выражение внутри скобок.</error>
	<error id="1083" label="kError_Parser_ExpectedPrimaryExprBefore">Синтаксическая ошибка: %s не ожидается 

<description>
	<![CDATA[
		The line of code is missing some information. In the following example,
		some expression (such as another number) needs to be included after the final plus sign:

		<pre>var sum:int = 1 + 2 + ;</pre>
	]]>
	</description>

</error>
	<error id="1084" label="kError_Parser_ExpectedToken">Синтаксическая ошибка: %s перед %s.
<description>
	<![CDATA[
		The expression was unexpected at this point.
		If the error says "Expecting right brace before end of program," a block of code
		is missing a closing brace (&#125).

		<p>If the error says "Expecting left parenthesis before _," you may have omitted a  
		parenthesis from a conditional expression, as shown in the following example, which is intentionally incorrect: </p>

		<pre><code>var fact:int = 1 * 2 * 3;
if fact &gt; 2 {
	var bigger:Boolean = true;
}</code></pre>
	]]>
	</description>


</error>
	<error id="1086" label="kError_Parser_ExpectedSemicolon">Синтаксическая ошибка: ожидается точка с запятой перед %s.</error>
	<error id="1087" label="kError_Parser_ExtraCharsAfterEndOfProgram">Синтаксическая ошибка: дополнительные символы в конце программы.</error>
	<error id="1093" label="kError_Lexical_General">Синтаксическая ошибка.</error>
	<error id="1094" label="kError_Lexical_LineTerminatorInSingleQuotedStringLiteral">Синтаксическая ошибка: строковый литерал должен завершиться до конца строки.</error>
	<error id="1095" label="kError_Lexical_LineTerminatorInDoubleQuotedStringLiteral">Синтаксическая ошибка: строковый литерал должен завершиться до конца строки.</error>
	<error id="1097" label="kError_Lexical_EndOfStreamInStringLiteral">Синтаксическая ошибка: ввод закончился до закрывающих кавычек для строкового литерала.</error>
	<error id="1099" label="kError_Lexical_SyntaxError">Синтаксическая ошибка.</error>
	<error id="1100" label="kError_Lexical_NoMatchingTag">Синтаксическая ошибка: в XML нет соответствующих тегов начала и окончания.</error>
	<error id="1102" label="kError_CannotDeleteSuperDecendants">Нельзя удалять суперпотомков.</error>
	<error id="1103" label="kError_DuplicateNamespaceDefinition">Повторение определения пространства имен.

	<description><![CDATA[
	You defined the namespace more than once. Delete or modify the duplicate definition.
	]]></description>


</error>
	<error id="1104" hidden="true" label="kError_ErrorNodeError"> %s </error>
	<error id="1105" label="kError_AssignmentTargetNotRefVal">Целью присваивания должно быть ссылочное значение.

	<description><![CDATA[
	You can assign a value to a variable, but you cannot assign a value to another value. 
	]]></description> 
</error>
	<error id="1106" label="kError_IncrementOperatorNotAReference">Операнд увеличения должен быть ссылкой.
	<description><![CDATA[
	The operand must be a variable, an element in an array, or a property of an object.
	]]></description>
</error>
	<error id="1107" label="kError_InvalidIncrementOperand">Операнд увеличения неправильный.

	<description><![CDATA[
	The operand must be a variable, an element in an array, or a property of an object.
	]]></description>
</error>
	<error id="1108" label="kError_InvalidDecrementOperand">Операнд уменьшения неправильный.
	<description><![CDATA[
	The operand must be a variable, an element in an array, or a property of an object.
	]]></description>
</error>
	<error id="1109" label="kError_ExpectingExpression">Ожидается выражение.

<description>
	<![CDATA[
		An expression is missing in a part of the code. For example, the following produces this
		error (there is a condition missing from the <code>if</code> statement:

<pre><code>var x = (5 &gt; 2) ? 
trace(x)</code></pre>
	]]>
	</description>


</error>
	<error id="1110" label="kError_MissingXMLTagName">Отсутствует имя XML-тега.</error>
	<error id="1111" hidden="true" label="kError_InvalidAbcFile">Файл %s является недопустимым файлом ABC. </error>
    <error id="1112" label="kError_Parser_FileIncludesItself">Возможна бесконечная рекурсия к этому файлу: %s.

	<description><![CDATA[
	A file that is included in the source being compiled contains other <code>include</code> 	statements that would cause an infinite loop. For example, the following files. a.as and 	b.as, generate this error because each file tries to include the other.
	<p>
	File a.as contains the following, which attempts to include the file b.as:
<pre>import foo.bar.baz;
include "b.as"
trace(2);</pre>
	<p>File b.as contains the following, which attempts to include the file a.as:
	<pre>include "a.as"</pre>

	]]></description>

</error>
	<error id="1113" label="kError_CircularReference">Обнаружена циклическая ссылка в %s.
	<description><![CDATA[
	A class is trying to extend a superclass. For example, class A cannot extend class B if B inherits from A:
<pre><code>class a extends b { }
class b extends a { }</code></pre>
	]]></description>

</error>
	<error id="1114" label="kError_InvalidPublic">Атрибут "public" может использоваться только внутри пакета.</error>
	<error id="1115" label="kError_InvalidInternal">Атрибут "internal" может использоваться только внутри пакета.</error>
	<error id="1116" label="kError_InvalidNamespace">Определенный пользователем атрибут пространства имен может использоваться на высшем уровне определения класса.</error>
	<error id="1118" label="kError_ImplicitCoercionToSubtype">Неявное исправление значения статического типа %s на возможный несвязанный тип %s.
	<description><![CDATA[You are using a value that is not of the expected type and no implicit coercion exists to convert it to the expected type.
	<p>Perhaps you are using a supertype where a subtype is expected. For example:
<pre><code>class A {}
var a:A = new A(); 
class B extends A { function f() }
var b : B = a // error</code></pre>
	<p>The last statement generates an error because it attempts to assign an object of type A to a variable of type B.
	<p>Similarly, the following defines the <code>foo()</code> function, which takes a parameter of type B. The statement <code> foo(a);</code> 
	generates an error because it attempts to use a parameter of type A:
<pre><code>function foo(x:B) { }
foo(a);</code></pre>
	<p>Also, the following statement generates an error because the returned value for 	<code>foo2()</code> must be type B:
	<pre><code>function foo2():B { return new A(); }</code></pre>
	]]></description>

</error>
	<error id="1119" label="kError_UndefinedProperty">Обращение возможного неопределенного свойства %s через ссылку со статическим типом %s .


<description>
	<![CDATA[
		You are attempting to access a property that does not exist for the specified object. For example,
		the following code generates this error because an int object does not have a property named
		<code>assortment</code>:

<pre><code>var i:int = 44;
var str:String = i.assortment;</code></pre>

		This error appears only when the compiler is running in strict mode.
	]]>
	</description>


</error>
	<error id="1120" label="kError_UnfoundProperty">Обращение несуществующего свойства %s.

<description>
	<![CDATA[
		You are attempting to access an undefined variable. For example, if the variable
		<code>huh</code> has not been defined, a call to it generates this error:

<pre><code>huh = 55;</code></pre>

		This error can appear only when the compiler is running in strict mode.
	]]>
	</description>


</error>
    <error id="1121" label="kError_GetterCannotHaveParameters">Определение получателя не должно содержать параметров.</error>
    <error id="1122" label="kError_SetterMustHaveOneParameter">Определение установщика должно содержать один параметр.</error>
    <error id="1123" label="kError_SetterCannotHaveOptional">Определение установщика не может содержать дополнительных параметров.</error>
    <error id="1124" label="kError_BadGetterReturnType">Возвращаемый тип определения получателя не должен быть пустым.

	<description><![CDATA[
	A getter function simulates a variable. Because variables cannot be of type void, you cannot declare getter functions to return type void.
	]]></description>
</error>
    <error id="1125" label="kError_InterfaceMethodWithBody">Методы, которые определены в интерфейсе, не должны содержать тело.</error>
    <error id="1126" label="kError_FunctionWithoutBody">У функции нет тела.</error>
    <error id="1127" label="kError_DuplicateAttribute">Атрибут %s был определен несколько раз.

	<description><![CDATA[
	You specified an attribute more than once in the same statement. For example, the statement <code>public static public var x;</code> generates 
	this error because it specifies that the variable <code>x</code> is public twice. Delete duplicate declarations.
	]]></description>

</error>
    <error id="1129" label="kError_DuplicateInterfaceDefinition">Повторное определение интерфейса: %s.

	<description><![CDATA[
	Change or delete the duplicate definitions.
	]]></description>

</error>
    <error id="1130" label="kError_CtorWithReturnType">Конструктор не может указывать возвращаемый тип.</error>
    <error id="1131" label="kError_InvalidClassNesting">Классы не должны быть вложенными.</error>
    <error id="1132" label="kError_InvalidFinalUsage">Только атрибут "final" может использоваться в методе, который определен в классе.</error>
    <error id="1133" label="kError_InvalidNative">Собственный атрибут может использоваться только с определениями функции.</error>
    <error id="1134" label="kError_InvalidDynamic">Атрибут "dynamic" может использоваться только с определениями класса.</error>
    <error id="1135" label="kError_Parser_keywordInsteadOfTypeExpr">Синтаксическая ошибка: %s представляет недопустимый тип.</error>
    <error id="1136" label="kError_WrongNumberOfArguments">Неправильное количество аргументов. Ожидается %s.

	<description><![CDATA[
	The function expects a different number of arguments than those you provided. For example, the 	following defines function <code>goo</code>, which has two arguments:
<pre>class A { static function goo(x:int,y:int) 
{ return(x+y); } }</pre>
	<p>The following statement would generate an error because it provides three arguments:
<pre>A.goo(1,2,3);</pre>
	]]></description>
</error>
    <error id="1137" label="kError_TooManyArguments">Неправильное количество аргументов. Ожидается не более %s.</error>
    <error id="1138" label="kError_BadRequiredParameter">Обязательные параметры нельзя использовать после дополнительных.</error>
    <error id="1139" label="kError_VarInInterface">Объявления переменных в интерфейсах недопустимо.</error>
    <error id="1140" label="kError_InvalidRestDecl">Параметры, указанные после ключевого слова определения параметра "...rest", могут относиться только к типу данных "Array".</error>
    <error id="1141" label="kError_CannotExtendInterface">Класс может расширять только другой класс, но не интерфейс.</error>
    <error id="1142" label="kError_CannotExtendClass">Интерфейс может расширять только другой интерфейс, но %s является классом.
	<description><![CDATA[
	You are attempting to have the interface extend a class. An interface can only extend another 	interface.
	]]></description>

</error>
    <error id="1143" label="kError_InvalidOverrideUsage">Атрибут "override" может использоваться только в методе, который определен в классе.</error>
    <error id="1144" label="kError_IncompatibleInterfaceMethod">Метод интерфейса %s в пространстве имен %s реализуется с несовместимой сигнатурой в классе %s.

	<description><![CDATA[
	Method signatures must match exactly.
	]]></description>

</error>
    <error id="1145" label="kError_NativeMethodWithBody">Собственные методы не могут иметь тело. 
	<description><![CDATA[
	You cannot use <code>native</code> because it is a reserved keyword.
	]]></description>

</error>
    <error id="1146" label="kError_ConstructorCannnotBeGetterSetter">Конструктор не может быть методом "получатель" или "установщик".</error>
    <error id="1147" label="kError_MissingFilespec">Исходный файл AS не определен.</error>
    <error id="1149" label="kError_CannotReturnFromStaticInit">Оператор "return" нельзя использовать в статическом коде инициализации.</error>
	<error id="1150" label="kError_InvalidProtected">Атрибут "protected" можно использовать только для определения свойств класса.</error>
	<error id="1151" label="kError_ConflictingNameInNamespace">Конфликт с определением %s в пространстве имен %s.

	<description><![CDATA[
	You cannot declare more than one variable with the same identifier name within the same scope unless all such variables are declared to be of 
	the same type. In ActionScript 3.0, different code 	blocks (such as those used in two <code>for</code> loops in the same function definition) are 	considered to be in the same scope. 
	<p>The following code example correctly casts the variable <code>x</code> as the same type:
<pre><code>function test()
{
	var x:int = 3;
	for(var x:int = 33; x &lt; 55; x++)
	trace(x);
	for(var x:int = 11; x &lt; 33; x++)
	trace(x)
}</code></pre>
	<p>The following code example generates an error because the type casting in the variable declaration and the <code>for</code> loops are different:
<pre><code>function test()
{
	var x:String = "The answer is";
	for(var x:int = 33; x &lt; 55; x++) // error
	trace(x);
	for(var x:unit = 11; x &lt; 33; x++) // error
	trace(x)
}</code></pre>
]]></description>


</error>
	<error id="1152" label="kError_ConflictingInheritedNameInNamespace">Конфликт с наследуемым определением %s в пространстве имен %s.</error>
    <error id="1153" label="kError_ConstructorMustBePublic">Конструктор может быть объявлен только публичным.</error>
	<error id="1154" label="kError_ConflictingAccessSpecifiers">В определении может указываться только "public", "private", "protected" или "internal".</error>
	<error id="1155" label="kError_InvalidNestedAccessor">Средства доступа не могут быть вложенными в другие функции.</error>
	<error id="1156" label="kError_CannotInstantiateInterface">Интерфейсы не могут быть реализованы с помощью нового оператора.</error>
	<error id="1157" label="kError_BadAccessInterfaceMember">Члены интерфейса не могут быть объявлены как публичные, частные, защищенные или внутренние.</error>
	<error id="1158" label="kError_Parser_ExpectedLeftBrace">Синтаксическая ошибка: отсутствует левая фигурная скобка ({) перед телом функции.</error>
    <error id="1159" label="kError_CannotReturnFromPackageInit">Оператор "return" нельзя использовать в коде инициализации пакетов.</error>
    <error id="1160" label="kError_InvalidInterfaceNative">Собственный атрибут нельзя использовать в определениях интерфейса.
	<description><![CDATA[
	You cannot use <code>native</code> because it is a reserved keyword.
	]]></description>

</error>
    <error id="1162" label="kError_MultipleNamespaceAttributes">В каждом определении можно использовать только один атрибут пространства имен.</error>
    <error id="1163" label="kError_ConflictingInheritedNameInInterface">Метод %s конфликтует с определением, которое наследуется из интерфейса %s.</error>
    <error id="1165" label="kError_InvalidInterfaceAttribute">Недопустимый атрибут интерфейса %s.</error>
    <error id="1166" label="kError_NamespaceInInterface">Объявление пространства имен в интерфейсах недопустимо.</error>
    <error id="1167" label="kError_DuplicateImplements">Класс %s реализует интерфейс %s несколько раз.

	<description><![CDATA[
	The class implements the same interface more than once. For example, the following generates this error because 
	class C implements interface A twice:

<pre><code>interface A {  public function f();  };
class C implements A,A {
public function f() { trace("f"); }
}</code></pre>
	
	<p>The correct implementing statement should be <code> class C implements A {</code>.
	]]></description>

</error>
    <error id="1168" label="kError_AssignmentToDefinedFunction">Недопустимое присваивание функции %s.

	<description><![CDATA[
	You are attempting to redefine a function. For example, the following defines the function 	<code>topLevel()</code> 
	to print the word "top". The second statement generates an error because it assigns a different return value to the function:
<pre><code>function topLevel() { trace("top"); }
topLevel = function() { trace("replacement works in ~");} // error</code></pre>
	]]></description>


</error>
    <error id="1169" label="kError_InterfaceNamespaceAttribute">Атрибуты пространства имен недопустимы в методах интерфейса.</error>
    <error id="1170" label="kError_MustReturnValue">Функция не возвращает значение.

	<description><![CDATA[
	Every possible control flow in a function must return a value whenever the return type is 	something other than void. The following function 
	<code>f(x)</code> does not generate an error because the <code>if..else</code> statement always returns a value:

<pre><code>function f(x):int
{
if (x)
    	return 2;
else
    	return 3;
} // no error</code></pre>

<p>However, the function <code>g(x)</code> below generates the error because the <code>switch</code> statement does not always 
return a value.
<pre><code>function g(x:int):int
{
switch(x)
{
      	case 1: return 1;
      	case 2: return 2:
}
// return 2;//uncomment to remove the error
}</code></pre>

	<p>This checking is enabled only when the function declares a return type other than void. 
	]]></description>
</error>
    <error id="1171" label="kError_InvalidNamespaceInitializer">Инициализатор пространства имен должен являться строкой литерала или другим пространством имен.</error>
    <error id="1172" label="kError_DefinitionNotFound">Не удалось найти определение %s.</error>
    <error id="1173" label="kError_InvalidLabel">Недопустимое определение метки.</error>
    <error id="1176" label="kError_IncompatableValueComparison">Сравнение значений статического типа %s и предположительно несвязанного типа %s.
<description>This error is enabled in strict mode.</description></error>
    <error id="1177" label="kError_CannotReturnFromGlobalInit">Оператор "return" не может использоваться в глобальном коде инициализации.</error>
    <error id="1178" label="kError_InaccessiblePropertyReference">Попытка вызова недоступного свойства %s с помощью ссылки со статическим типом %s.</error>
    <error id="1179" hidden="true" label="kError_ColonObjectAnnoOutOfService">:Объект временно не обслуживается. Вместо этого используйте :* .</error>
	<error id="1180" label="kError_Strict_PlainUndefinedMethod">Вызов предположительно неопределенного метода %s.
<description>This error appears only when the compiler is running in strict mode.</description></error>
	<error id="1181" label="kError_ForwardReferenceToBaseClass">Прямая ссылка на базовый класс %s.</error>
	<error id="1182" label="kError_IllegalPackageReference">Пакет нельзя использовать как значение: %s.</error>
	<error id="1184" label="kError_IncompatibleDefaultValue">Несовместимое значение по умолчанию типа %s; ожидается %s.</error>
	<error id="1185" label="kError_MultipleSwitchDefaults">Переключатель имеет несколько значений по умолчанию, но допустимо только одно значение.</error>
    <error id="1188" label="kError_AssignmentToDefinedClass">Wu6Я_Illegal assignment to class %s.</error>
    <error id="1189" label="kError_Strict_AttemptToDeleteFixedProperty">Попытка удаления фиксированного свойства %s. Можно удалять только динамически определенные свойства. 
<description>Delete removes dynamically defined properties from an object.  Declared properties of a class can not be deleted.  This error appears only when the compiler is running in strict mode.</description></error>
	<error id="1190" label="kError_InvalidBaseTypeExpression">Базовый класс не найден или не является константой времени компиляции.</error>
    <error id="1191" label="kError_InvalidInterfaceTypeExpression">Интерфейс не найден или не является константой времени компиляции.</error>
    <error id="1192" label="kError_StaticModifiedNamespace">Атрибут "static" не может быть использован в определениях пространства имен.</error>
    <error id="1193" label="kError_InvalidInterfaceNesting">Определения интерфейса не должны быть вложенными внутри класса или других определений интерфейса.</error>
	<error id="1194" label="kError_PrototypeIsAnInvalidAttribute">Недопустимый атрибут "prototype".</error>
	<error id="1195" label="kError_InaccessibleMethodReference">Попытка вызова недоступного свойства %s с помощью ссылки со статическим типом %s.
		<description><![CDATA[You are either calling a private method from another class, or calling a method defined in a namespace that is not in use.  If you are calling a method defined in an unused namespace, add a <code>use</code> statement for the required namespace.
	]]></description>
 	</error>
	<error id="1196" label="kError_Parser_ThrowWithoutExpression">Синтаксическая ошибка: после оператора "throw" ожидается выражение.</error>
    <error id="1197" label="kError_Authoring_SymbolClassInheritance">Класс %s не может расширять %s, так как они оба связаны с библиотечными символами или основной временной шкалой.</error>
    <error id="1198" label="kError_AttributesOnPackage">Атрибуты не могут использоваться в определении пакета.</error>
    <error id="1199" label="kError_InternalError">Внутренняя ошибка: %s.</error>
    <error id="1200" label="kError_ParserInvalidForInInitializer">Синтаксическая ошибка: недопустимый инициализатор "for-in", ожидается только 1 выражение.</error>
	<error id="1201" label="kError_IllegalSuperStatement">Супероператор не может следовать за операторами "this", "super", "return" или "throw".</error>
	<error id="1202" label="kError_UnfoundPackageProperty">Вызов неопределенного свойства %s в пакете %s.

<description>
	<![CDATA[
		You are attempting to access an undefined variable in a package. For example, if the variable
		<code>p.huh</code> has not been defined, a call to it generates this error:

<pre><code>p.huh = 55;</code></pre>

		This error can only appear when the compiler is running in strict mode.
	]]>
</description>
    </error>
    <error id="1203" label="kError_NoDefaultBaseclassCtor">Не удалось найти конструктор по умолчанию в базовом классе %s.
<description>You must explicitly call the constructor of the base class with a super() statement if it has 1 or more required arguments.</description></error>
	<error id="1204" label="kError_BlockCommentNotTerminated">Обнаружен /* без соответствующего */ .
<description>
	<![CDATA[
		The characters '/*' where found, which indicate the beginning of a comment, but the corresponding characters, '*/', which indicate the end of the comment block, were not found.
    ]]></description>
	</error>
</errors>
