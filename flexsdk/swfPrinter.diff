Index: src/java/flash/swf/tools/SwfxPrinter.java
===================================================================
--- src/java/flash/swf/tools/SwfxPrinter.java	(revision 7755)
+++ src/java/flash/swf/tools/SwfxPrinter.java	(working copy)
@@ -12,6 +12,8 @@
 package flash.swf.tools;
 
 import macromedia.abc.AbcParser;
+import macromedia.abc.BytecodeBuffer;
+import macromedia.abc.Optimizer;
 import macromedia.asc.embedding.CompilerHandler;
 import macromedia.asc.embedding.avmplus.ActionBlockEmitter;
 import macromedia.asc.parser.ProgramNode;
@@ -74,6 +76,7 @@
 import java.net.URL;
 import java.net.URLConnection;
 import java.text.DateFormat;
+import java.util.List;
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.Iterator;
@@ -87,6 +90,8 @@
  */
 public final class SwfxPrinter extends TagHandler
 	{
+        private static List<BytecodeBuffer> byteCodes = null;
+
 		/**
 		 * this value should get set after the header is parsed
 		 */
@@ -1842,6 +1847,9 @@
 		
 		public void doABC(DoABC tag)
 		{
+        if (byteCodes != null) {
+            byteCodes.add(new BytecodeBuffer(tag.abc));
+        }
 			if (abc)
 			{
 				open(tag);
@@ -1997,12 +2005,13 @@
 		{
 			if (args.length == 0)
 			{
-				System.err.println("Usage: java tools.SwfxPrinter [-encode] [-asm] [-abc] [-showbytecode] [-noactions] [-showdebugsource] [-showoffset] [-noglyphs] [-external] [-save file.swf] [-nofunctions] [-out file.swfx] file1.swf ...");
+				System.err.println("Usage: java tools.SwfxPrinter [-encode] [-asm] [-abc] [-showbytecode] [-noactions] [-showdebugsource] [-showoffset] [-noglyphs] [-external] [-dump file.abc] [-save file.swf] [-nofunctions] [-out file.swfx] file1.swf ...");
 				System.exit(1);
 			}
 			
 			int index = 0;
 			PrintWriter out = null;
+            OutputStream abcOut = null;
 			String outfile = null;
 			
 			while ((index < args.length) && (args[index].startsWith("-")))
@@ -2018,6 +2027,12 @@
 					saveOption = true;
 					outfile = args[index++];
 				}
+            else if (args[index].equals("-dump"))
+            {
+                ++index;
+                byteCodes = new ArrayList<BytecodeBuffer>();
+                abcOut = new BufferedOutputStream(new FileOutputStream(args[index++]));
+            }
 				else if (args[index].equals("-decompile"))
 				{
 					decompileOption = true;
@@ -2173,6 +2188,12 @@
 						printer.printActions(actions);
 					}
 					out.flush();
+                if (abcOut != null) {
+                    BytecodeBuffer[] codes = byteCodes.toArray(new BytecodeBuffer[0]);
+                    abcOut.write(Optimizer.optimize(codes, true));
+                    abcOut.close();
+                    abcOut = null;
+                }
 				}
 				catch (Error e)
 				{
