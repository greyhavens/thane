/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine.].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

function main()
{
	getlocal0
	pushscope
	newfunction .function_id(catchIt)
	getlocal0
	call 0
	returnvoid
}

//  Test exception handling.
.method_info { name: catchIt flags: NEED_ACTIVATION }

.method_body_info {
    method: .function_id(catchIt)

	traits: {
	    .trait { kind: Trait_Slot name: this }
	    .trait { kind: Trait_Slot name: zuul }
	}

	exception: {
		.exception { from: StartTry to: EndTry type: int target: BadCatch }
	    .exception { from: StartTry to: EndTry target: Catch1 }
	}

	code:
	{
		newactivation 
		dup
		setlocal1
		pushscope

		findpropstrict START
		pushstring "Catch processing "
		callpropvoid START 1

		getscopeobject 0
	    pushnull
		setslot .slot_id(zuul)
		getscopeobject 0
		getslot .slot_id(zuul)
	StartTry:
		callpropvoid moo 0
		jump Endit
	EndTry:

	Catch1:
		getlocal1
		pushscope

		pushstring "Caught :"
		swap
		add
		findpropstrict PASS
		swap
		callpropvoid PASS 1
	    jump Endit

	BadCatch:
		getlocal1
		pushscope

		pushstring "Wrong catch!"
		swap
		add
		findpropstrict FAIL
		swap
		callpropvoid FAIL 1
		returnvoid

	Endit:
		findpropstrict END
		callpropvoid END 0

	    returnvoid
	}
}
