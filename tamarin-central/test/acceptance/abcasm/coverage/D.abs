/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine.].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

function main() {
	getlocal0
	pushscope
	findproperty START 
	pushstring "Instructions that start with the letter D" 
	callpropvoid START 1
	newfunction .function_id(runTest)
	getlocal0
	call 0
	findproperty END
	callpropvoid END 0
	returnvoid
}

.method_info { 
	name: runTest 
	flags: SETS_DXNS
}
.method_body_info {

	method: .function_id(runTest)

	traits: {
		.trait { kind: Trait_Slot name: var1 }
	}
	code:
	{
		pushint 7
		setlocal 1
		pushdouble 7.5
		setlocal2
		pushnull
		setlocal3

		//  TODO: add  and debugline

		findproperty COMPARE_STRICTEQ
	pushstring "declocal"
		pushint 6 // expected
		declocal 1
		getlocal1
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "declocal double"
		pushdouble 6.5 // expected
		declocal 2
		getlocal2
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "declocal - null"
		pushint -1 // expected
		declocal 3
		getlocal3
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "declocal - boolean true"
		pushint 0 // expected
		pushtrue
		setlocal3
		declocal 3
		getlocal3
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "declocal - boolean false"
		pushint -1 // expected
		pushfalse
		setlocal3
		declocal 3
		getlocal3
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "declocal_i"
		pushint 5 // expected
		declocal_i 1
		getlocal1
		callpropvoid COMPARE_STRICTEQ 3

		/*
		 * Taken offline to analyze failure 
		findproperty COMPARE_STRICTEQ
		pushstring "declocal_i_double"
		pushint 5 // expected
		declocal_i 2
		getlocal2
		callpropvoid COMPARE_STRICTEQ 3
		*/

		findproperty COMPARE_STRICTEQ
	pushstring "decrement int"
		pushint 99 // expected
		pushint 100
		decrement
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "decrement uint"
		pushuint 4294967294 // expected
		pushuint 4294967295
		decrement
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "decrement uint"
		pushint -1 // expected
		pushuint 0
		decrement
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "deleteproperty noSuchProperty"
		pushtrue // expected
		findproperty Object
		constructprop Object 0
		deleteproperty noSuchProperty
		callpropvoid COMPARE_STRICTEQ 3

		//  Should this work?
		findproperty COMPARE_STRICTEQ
	pushstring "deleteproperty length"
		pushtrue // expected
		findproperty Object
		constructprop Object 0
		deleteproperty length
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "divide double by int"
		pushdouble 4.25 // expected
		pushdouble 8.5
		pushint 2
		divide
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "divide int by int"
		pushdouble 4.25 // expected
		pushint 17
		pushint 4
		divide
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "divide double by uint"
		pushdouble 4. // expected
		pushdouble 17179869180.
		pushuint 4294967294
		divide
		pushint 5
		callproperty COMPARE_NUMBEREQ 4
		

		findproperty COMPARE_STRICTEQ
	pushstring "dxns"
		dxns "foo"
		findproperty PASS
	swap
	callpropvoid PASS 1
		pop // COMPARE_STRICTEQ

		findproperty COMPARE_STRICTEQ
	pushstring "dxnslate"
		pushstring "foo"
		dxnslate
		findproperty PASS
	swap
	callpropvoid PASS 1
		pop // COMPARE_STRICTEQ

		findproperty COMPARE_STRICTEQ
	pushstring "dxnslate - null"
		pushnull
		dxnslate
		findproperty PASS
	swap
	callpropvoid PASS 1
		pop // COMPARE_STRICTEQ


		returnvoid
	}
} //  runTest
