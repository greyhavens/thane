/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine.].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

function main() {
	getlocal0
	pushscope
	findproperty START 
	pushstring "Instructions that start with the letter N" 
	callpropvoid START 1
	newfunction .function_id(runTest)
	getlocal0
	call 0
	findproperty END
	callpropvoid END 0
	returnvoid
}

function runTest()
{
	findproperty COMPARE_STRICTEQ
	pushstring "negate integer"
	pushint -4 // expected
	pushint 4
	negate
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate negative integer"
	pushint 4 // expected
	pushint -4
	negate
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate uint"
	pushint -4 // expected
	pushuint 4
	negate
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate double"
	pushint -4 // expected
	pushdouble 4.
	negate
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate negative double"
	pushint 4 // expected
	pushdouble -4.
	negate
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate_i integer"
	pushint -4 // expected
	pushint 4
	negate_i
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate_i negative integer"
	pushint 4 // expected
	pushint -4
	negate_i
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate_i uint"
	pushint -4 // expected
	pushuint 4
	negate_i
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate_i double"
	pushint -4 // expected
	pushdouble 4.
	negate_i
	callpropvoid COMPARE_STRICTEQ 3

	findproperty COMPARE_STRICTEQ
	pushstring "negate_i negative double"
	pushint 4 // expected
	pushdouble -4.2
	negate_i
	callpropvoid COMPARE_STRICTEQ 3

	newfunction .function_id(test_newactivation)
	getlocal 0
	call 0
	pushstring "newfunction and newactivation"
	findproperty PASS
	swap
	callpropvoid PASS 1

	/*
	 *  TODO: work around the verify error.
	newfunction .function_id(test_newactivation_negative)
	getlocal 0
	call 0
	*/

	findproperty COMPARE_STRICTEQ
	pushstring "newarray"
	//pushdouble 4.2 // expected
	pushint 4 // expected
	pushint  49
	pushdouble 4.2
	pushnull
	pushundefined
	newarray  4
	getproperty length
	callpropvoid COMPARE_STRICTEQ 3

	/*
	 *  TODO: newclass needs more class support
	 */
	
	//  Newfunction tested lots

	newfunction .function_id(test_newcatch)
	getlocal 0
	call 0

	newobject 0
	pushstring "newobject() "
	swap
	add
	findproperty PASS
	swap
	callpropvoid PASS 1

	findproperty COMPARE_STRICTEQ
	pushstring "newobject getproperty"
	pushnull // expected
	pushstring "foo"
	pushnull
	newobject 1
	getproperty foo
	callpropvoid COMPARE_STRICTEQ 3

	returnvoid
}

.method_info { name: test_newactivation flags: NEED_ACTIVATION }

.method_body_info {
	method: .function_id(test_newactivation)
	code: 
	{
		newactivation
		dup
		setlocal1
		pushscope

		returnvoid
	}
}

.method_info{ name: test_newcatch flags: NEED_ACTIVATION }
.method_body_info {
	method: .function_id(test_newcatch)
	exception: {
		.exception { from: startTry to:endTry target:catchEx }
	}
	code:
	{
			getlocal0
			pushscope

		startTry:
			pushnull
			getproperty zibble
		endTry:
			pushstring "newcatch"
			findproperty FAIL
	swap
	pushstring "..."
	dup
	callpropvoid FAIL 3
			returnvoid
		catchEx:
			getlocal0
			pushscope
			pushstring "newcatch: "
			newcatch 0
			add
			findproperty PASS
	swap
	callpropvoid PASS 1
			returnvoid
	}
}


