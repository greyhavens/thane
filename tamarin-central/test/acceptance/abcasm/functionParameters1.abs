/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine.].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

//  Test function parameter passing.

.script_info { 
	init: .function_id(main)
	traits: {
		.trait { kind: Trait_Slot name:oneParam }
		.trait { kind: Trait_Slot name:intFunc }
	}
}

function main()
{
	getlocal0
	pushscope

	findproperty oneParam
	newfunction .function_id(oneParam)
	setslot .slot_id(oneParam)

	findproperty intFunc
	newfunction .function_id(intFunc)
	setslot .slot_id(intFunc)

	findpropstrict START
	pushstring "call void function with string"
	callproperty START 1

	getlocal0
	pushstring "Param one"
	callproperty oneParam 1

	findpropstrict END
	callproperty END 0

	findpropstrict START
	pushstring "call int function with int param"
	callproperty START 1

	getlocal0
	pushbyte 4
	callproperty intFunc 1
	setlocal2

	findpropstrict END
	callproperty END 0

	findpropstrict START
	pushstring "Check return value"
	callproperty START 1

	findpropstrict COMPARE_STRICTEQ
	pushstring "return value"
	pushbyte 7
	getlocal2
	callproperty COMPARE_STRICTEQ 3

	findpropstrict END
	callproperty END 0

	returnvoid
}


//function oneParam(String)
.method_info { name:oneParam return_type:void param_type: {String} }

.method_body_info {
	method: .function_id(oneParam)
	code:
	{
		findpropstrict COMPARE_STRICTEQ
		pushstring "String param"
		pushstring "Param one"
		getlocal1
		callproperty COMPARE_STRICTEQ 3
		returnvoid
	}
}

function intFunc(int):int
{
	pushdouble 3.14157
	getlocal1
	add
	returnvalue
}
